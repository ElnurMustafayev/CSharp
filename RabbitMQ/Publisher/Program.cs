using RabbitMQ.Client;
using System.Text;

namespace Publisher;

public class Program {
    public static void Main() {
        var factory = new ConnectionFactory() { HostName = "localhost" };

        // connect to RabbitMQ listener on "localhost"
        using IConnection connection = factory.CreateConnection();
        // create connection
        using IModel channel = connection.CreateModel();

        // use or create queue
        channel.QueueDeclare(queue: "dev-queue",            // queue name (if "" - will autogenerated)
                                durable: false,             // will survive if broker restart
                                exclusive: false,           // delete if connection closed?
                                autoDelete: false,          // delete when the last consumer will unconnect?
                                arguments: null);           // optional arguments <key: string, value: object>

        // prepare message
        string message = Guid.NewGuid().ToString();
        byte[] messageInBytes = Encoding.UTF8.GetBytes(message);

        // publish message
        channel.BasicPublish(exchange: "",                  // default exchange
                                routingKey: "dev-queue",    // queue name (bcs default exchange)
                                basicProperties: null,      // AMQP Basic headers
                                body: messageInBytes);      // message's body

        Console.WriteLine($"'{message}' message was send by default exchange!");
    }
}